{% set name = "virtualbricks" %}
{% set version = "2.0.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/virtualsquare/virtualbricks/archive/v{{ version }}.tar.gz
  sha256: 

build:
  noarch: python
  number: 0
  # If the installation is complex, or different between Unix and Windows, use separate bld.bat and build.sh files instead of this key.
  # By default, the package will be built for the Python versions supported by conda-forge and for all major OSs.
  # Add the line "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or "skip: True  # [not win]" to limit to Windows.
  script: "{{ PYTHON }} -m pip install . -vv"
  entry_points:
    - 'virtualbricks = virtualbricks.scripts.virtualbricks:run'


requirements:
  build:
  host:
    - pip
  run:
    - python
    - pillow
    - pygraphvis
    - twisted >=12.0.0
    - zope.interface >3.5
    - pygobject

test:
  # Some packages might need a `test/commands` key to check CLI.
  # List all the packages/modules that `run_test.py` imports.
  imports:
    - virtualbricks
    - virtualbricks.gui
    - virtualbricks.scripts
    - virtualbricks.tests
      
  # For python packages, it is useful to run pip check. However, sometimes the
  # metadata used by pip is out of date. Thus this section is optional if it is
  # failing.
  requires:
    - pip
  commands:
    - pip check
    - virtualbricks --version

about:
  home: https://github.com/virtualsquare/virtualbricks
  license: GPL-2.0-only
  license_family: GPL
  license_file: LICENSE
  summary: 'Frontend for Qemu Virtual Machines (VMs) and VDE virtualized network devices'
  description: |
    Virtualbricks is a frontend for the management of Qemu Virtual Machines (VMs) and VDE
    virtualized network devices (switches, channel emulators, etc.). Although it can be used to
    manage isolated VMs, its peculiar aim is to design and manage testbeds consisting of many VMs
    interconnected by VDE elements. In other words, it allows to extend the concept of VM to
    testbeds, which thanks to Virtualbricks can become entirely software-defined.
  dev_url: https://github.com/virtualsquare/virtualbricks

extra:
  recipe-maintainers:
    - timsnyder
